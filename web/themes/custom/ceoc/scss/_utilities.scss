/* Sass Document */
// NEW STUFF FOR BS4, clean up/refine
$padding-base-vertical: 10px;
$padding-large-vertical: $padding-base-vertical * 2;

// MIXINS
// placeholder mixin: 
@mixin placeholder($placeholder-color) { 
  &::-webkit-input-placeholder {
    color: $placeholder-color !important;
  }
  &:-moz-placeholder {
    /* Firefox 18- */
    color: $placeholder-color !important;
  }
  &::-moz-placeholder {
    /* Firefox 19+ */
    color: $placeholder-color !important;
  }
  &:-ms-input-placeholder {
    color: $placeholder-color !important;
  }
}

// nested row fix
.row .row {
  margin-left: $grid-gutter-width / -2 !important;  
  margin-right: $grid-gutter-width / -2 !important;  
}

/* INVERSE TEXT */
.text-inverse, .text-reverse  {
  &.fa {
    color: $white;
  }
  h1, 
  h2,
  h3,
  h4,
  h5,
  p,
  li {
    border-color: $white;
    color: $white;
  }
  a, a.active {
    color: white;
    // text-decoration: underline;
    
    &:hover {
      //background-color: $black;
    }
  }
  h2,
  h3,
  h4,
  h5,
  .btn,
  p,
  li { 
    -webkit-font-smoothing: antialiased; // keeps inversed fonts from jumping up a weight 
   } 
  .btn {
    border-color: $white;
    // background-color: $white; 
    // color: theme-color("primary");
  }
  .form-control {
    // background-color: transparentize($gray-900, .8);
    // border: 1px solid $white;
    // color: $white;
  }
  input {
    // background-color: transparentize($gray-900, .8);
    // border: 1px solid $white;
    // color: $white;
  }
  .webform-submit,
  input[type="submit"] {
    // background-color: transparentize(theme-color("secondary"), .8);
    transition: background-color .5s ease;
    // border-color: $white;
    // padding: 0;
    &:hover {
      background-color: transparentize(theme-color("secondary"), .5);
    }
    @media (max-width: grid-breakpoints("sm")) {}
  }
  // Placeholder Text
  ::-webkit-input-placeholder {
    //color: $gray-300 !important;
  }
  :-moz-placeholder {
    /* Firefox 18- */
    //color: $gray-300 !important;
  }
  ::-moz-placeholder {
    /* Firefox 19+ */
    //color: $gray-300 !important;
  }
  :-ms-input-placeholder {
    //color: $gray-300 !important;
  }
}
.text-shadow-bump {
  text-shadow: 0 2px 12px transparentize($gray-900, .33); 
}
.text-shadow-bump-more {
  text-shadow: 0 2px 12px transparentize($gray-900, .1); 
}
// blue outlines on click
button:focus, 
a:focus {
	outline:0;
}

/* DRUPAL EDIT LINKS */ 
// Edit Buttons
.contextual ul.contextual-links a {
  text-transform: none !important; 
  font-weight: 400;
}


/* Utility Classes */
.clear {
  clear: both; 
}
// Gradient Mixin 
@mixin gradient($from-color, $to-color) {
  background-color: mix($from-color, $to-color); /* Fallback */
  background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from($from-color), to($to-color));
  background-image: -webkit-linear-gradient(top, $from-color, $to-color); 
  background-image:    -moz-linear-gradient(top, $from-color, $to-color);
  background-image:     -ms-linear-gradient(top, $from-color, $to-color);
  background-image:      -o-linear-gradient(top, $from-color, $to-color);
  -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$from-color}', EndColorStr='#{$to-color}')";
}


// bullet-free lists
.no-bull {
  list-style: none;
  margin-left: 0;
  padding-left: 0;
  li {
    margin-left: 0;
    padding-left: 0;
  }
  ul {
    //repeated because sometimes we have to add the class to the ul, sometimes to its container
    list-style: none;
    margin-left: 0;
    padding-left: 0;
    li {
      margin-left: 0;
      padding-left: 0;
    }
  }
}
// horizontal pipe list
ul.horizontal-list {
  list-style: none; 
  padding: 0; 
  li {
    display: inline-block;
    padding: 0 10px; 
    border-right: solid 1px; 
    &:last-child {
      border-right: none; 
    }
  }
}
// img helpers
img.pull-right {
  margin-left: $line-height-base;  
  margin-bottom: $line-height-base / 2 ;
}
img.pull-left {
  margin-right: $line-height-base;  
  margin-bottom: $line-height-base / 2 ;
}
.img-responsive img, img.img-responsive {
  max-width: 100%; 
  height: auto; 
}
img.circle {
  border-radius: 100%; 
  &.pull-left, 
  &.pull-right {
    max-width: 50%; 
  
  }
}


/* TEXT ALIGNMENT */
.text-right {
	text-align: right;
}
.text-left {
	text-align: left;
}
.text-center {
  text-align: center;
}

// responsive alignment
@media (max-width: grid-breakpoints("sm")) {
	.text-xs-left {
		text-align: left;
	}
	.text-xs-right {
		text-align: right;
	}
	.text-xs-center {
		text-align: center;
	}
	.text-xs-justify {
		text-align: justify;
	}
}

@media (min-width: grid-breakpoints("sm")) {
  .text-sm-left {
    text-align: left;
  }
  .text-sm-right {
    text-align: right;
  }
  .text-sm-center {
    text-align: center;
  }
  .text-sm-justify {
    text-align: justify;
  }
}

@media (min-width: grid-breakpoints("md")) {
  .text-md-left {
    text-align: left;
  }
  .text-md-right {
    text-align: right;
  }
  .text-md-center {
    text-align: center;
  }
  .text-md-justify {
    text-align: justify;
  }
}

@media (min-width: grid-breakpoints("lg")) {
  .text-lg-left {
    text-align: left;
  }
  .text-lg-right {
    text-align: right;
  }
  .text-lg-center {
    text-align: center;
  }
  .text-lg-justify {
    text-align: justify;
  }
}


// use bs4 .p-N classes here
/*
.padtop {
  padding-top: $padding-base-vertical;
}
.padtop-more {
  padding-top: $padding-large-vertical;
}
.padtop-most {
  padding-top: $grid-gutter-width;
}
.padbottom {
  padding-bottom: $padding-base-vertical;
}
.padbottom-more {
  padding-bottom: $padding-large-vertical;
}
.padbottom-most {
  padding-bottom: $grid-gutter-width;
}
.margin-top {
  margin-top:  $padding-base-vertical; 
}
*/
.nopad-left {
  padding-left: 0;
}
.nopad-right {
  padding-right: 0;
}
.nopad-sides {
  padding-left: 0;
  padding-right: 0;
}
.flush-top {
  margin-top: 0 !important;
}
.flush-bottom {
  margin-bottom: 0 !important; 
}


// nested columns fix - width limiting overrides row > row fix // fixed in BS4
.row .row,
.row .row .row {
  margin-left: ($grid-gutter-width / -2) !important;
  margin-right: ($grid-gutter-width / -2) !important;
}

.bg-info {
  background-color: $gray-300 !important;
}
.pin-bottom {
  position: absolute; 
  bottom: 0; 
  left: 0; 
  right: 0; 
  z-index: 2;
}
/* redo for bs4
// btns in cols add gap when stacked
[class^="col-sm"], 
[class^="col-md"], 
[class^="col-lg"] {
  & > .btn {
    @media (max-width: grid-breakpoints("sm")){
      //margin-bottom: $padding-base-vertical; 
    }
  }
} 

// Row lineups of views-rows
@media (max-width: grid-breakpoints("sm")) {
  .view-content {
    .col-xs-6:nth-of-type(2n+3),
    .col-xs-4:nth-of-type(3n+4),
    .col-xs-3:nth-of-type(4n+5) {
      clear: left;
    }
  }
}
@media (min-width: grid-breakpoints("sm"))  {
  .view-content {
    .col-sm-6:nth-of-type(2n+3),
    .col-sm-4:nth-of-type(3n+4),
    .col-sm-3:nth-of-type(4n+5) {
      clear: left;
    }
  }
}
@media (min-width: grid-breakpoints("md")) {
    .col-md-6,
    .col-md-4,
    .col-md-3, 
    .col-md-2 {
      &.col-sm-6:nth-of-type(2n+3),
      &.col-sm-4:nth-of-type(3n+4),
      &.col-sm-3:nth-of-type(4n+5) {
        clear: none;
      }
    }
    .view-content {  
      .col-md-6:nth-of-type(2n+3),
      .col-md-4:nth-of-type(3n+4),
      .col-md-3:nth-of-type(4n+5),
      .col-md-2:nth-of-type(6n+7){
        clear: left;
      }
    }
}
@media (min-width: grid-breakpoints("lg"))  {
    .col-lg-6,
    .col-lg-4,
    .col-lg-3, 
    .col-lg-2 {
      &.col-sm-6:nth-of-type(2n+3),
      &.col-sm-4:nth-of-type(3n+4),
      &.col-sm-3:nth-of-type(4n+5),
      &.col-md-6:nth-of-type(2n+3),
      &.col-md-4:nth-of-type(3n+4),
      &.col-md-3:nth-of-type(4n+5),
      &.col-md-2:nth-of-type(6n+7) {
        clear: none;
      }
    }
  .view-content {  
    .col-lg-6:nth-of-type(2n+3),
    .col-lg-4:nth-of-type(3n+4),
    .col-lg-3:nth-of-type(4n+5),
    .col-lg-2:nth-of-type(6n+7) {
      clear: left;
    }
  }
} 
*/

/* turn off number field spinners */
input[type=number]::-webkit-inner-spin-button, 
input[type=number]::-webkit-outer-spin-button { 
  -webkit-appearance: none; 
  margin: 0; 
}

/* Transform Mixins */
// Browser Prefixes
@mixin transform($transforms) {
	-webkit-transform: $transforms;
	-moz-transform: $transforms;
	-ms-transform: $transforms;
	transform: $transforms;
}

// Rotate
@mixin rotate ($deg) { 
	@include transform(rotate(#{$deg}deg));
}

// Scale
@mixin scale($scale) {
	@include transform(scale($scale));
}

// Translate
@mixin translate ($x, $y) {
	@include transform(translate($x, $y));
}

// Skew
@mixin skew ($x, $y) {
	@include transform(skew(#{$x}deg, #{$y}deg));
}

// Transform Origin
@mixin transform-origin ($origin) {
  -webkit-transform-origin: $origin;
  -moz-transform-origin: $origin;
	-ms-transform-origin: $origin;
	transform-origin: $origin;
}