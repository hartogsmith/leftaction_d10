<?php
/**
 * @file
 * Bootstrap 3 based theme.
 */

// add typekit field 
function ceoc_form_system_theme_settings_alter(&$form, \Drupal\Core\Form\FormStateInterface &$form_state, $form_id = NULL) {
  // Work-around for a core bug affecting admin themes. See issue #943212.
  if (isset($form_id)) {
    return;
  }

  $form['tk'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Typekit'),
    '#default_value' => theme_get_setting('tk'),
    '#description'   => t("Enter the Typekit ID."),
  );
}

use Drupal\Core\DrupalKernel;
use Symfony\Component\HttpFoundation\Request;


/*function ceoc_preprocess_html(&$variables) {
  // add node-id-based and hero-image body class 
   if (($node = \Drupal::routeMatch()->getParameter('node')) && $node instanceof \Drupal\node\NodeInterface) {
     $variables['attributes']['class'][] = 'page-node-' . $node->id();
     if($node->field_hero_image->entity){
       $fileUrl = \Drupal::service('file_url_generator')->generateAbsoluteString($uri);
      $hero = file_create_url($node->field_hero_image->entity->getFileUri());
     } else {
      $hero = false;
    }
    if($hero){ 
       $variables['attributes']['class'][] = 'has-hero';    
     }
   }
   // make the tk var available
    $variables['tk'] = theme_get_setting('tk');
}*/

// global vars for page level
function ceoc_preprocess_page(array &$variables) {
  // load the site name and slogan from configuration
  $config = \Drupal::config('system.site');
  $variables['site_name'] = $config->get('name');
  $variables['site_slogan'] = $config->get('slogan');
}

// Support different templates for the same menu when placed in different blocks:
/**
 * Implements hook_preprocess_block().
 */
function ceoc_preprocess_block(&$variables) {
  $variables['content']['#attributes']['block'] = $variables['attributes']['id'];
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function ceoc_theme_suggestions_menu_alter(array &$suggestions, array $variables) {
  // Remove the block and replace dashes with underscores in the block ID to
  // use for the hook name.
  if (isset($variables['attributes']['block'])) {
    $hook = str_replace(array('block-', '-'), array('', '_'),    $variables['attributes']['block']);
    $suggestions[] = $variables['theme_hook_original'] . '__' . $hook;
  }
}

// custom block theming hook
function ceoc_theme_suggestions_block_alter(array &$suggestions, array $variables)
{
  // Block suggestions for custom block bundles.
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 1, 0, 'block__bundle__' . $variables['elements']['content']['#block_content']->bundle());
  }
}
